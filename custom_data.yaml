# YOLOv5 🚀 by Ultralytics, AGPL-3.0 license
# COCO128 dataset https://www.kaggle.com/ultralytics/coco128 (first 128 images from COCO train2017) by Ultralytics
# Example usage: python train.py --data coco128.yaml
# parent
# ├── yolov5
# └── datasets
#     └── coco128  ← downloads here (7 MB)

# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: C:/Users/ttbon/Documents/object_detection/train_data # dataset root dir
train: ../train_data/images/train/ # train images (relative to 'path') 128 images
val: ../train_data/images/val/ # val images (relative to 'path') 128 images
test: # test images (optional)

# Classes
names:
  0: consolidation
  1: bullflag
  2: mini bullflag
  3: cup and handle
  4: bearflag
  5: mini bearflag
  6: cloudbank
  7: inverse cloudbank
  #8: head and shoulders
  #9: inverse head and shoulders
  10: double top
  11: double bottom
  #12: triple top
  #13: triple bottom
  14: scallop
  15: inverse scallop

  
augmentation:
  hue: 0.1 # Adjust the image hue by a small amount
  saturation: 1.5 # Increase saturation to make the colors more vivid
  exposure: 1.5 # Adjust exposure to simulate different lighting conditions
  flip: 0.5 # Probability of horizontal image flip
  mosaic: true # Use mosaic augmentation if supported
  mixup: 0.2 

class_weights:
  0: 0.008457
  1: 0.024080
  2: 0.032456
  3: 0.070870
  4: 0.088169
  5: 0.097369
  6: 0.121711
  7: 0.386118
  #8: 0.533211
  #9: 2.239486
  10: 2.239486
  11: 2.799357
  #12: 2.5
  #13: 2.5
  14: 0.533211
  15: 5.598715
